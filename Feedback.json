{"files":[{"id":"5f22480f-f33d-4ed3-9e4c-a5a55d2a754a","name":"appsscript","type":"json","source":"{\n  \"timeZone\": \"Asia/Kolkata\",\n  \"dependencies\": {},\n  \"exceptionLogging\": \"STACKDRIVER\",\n  \"runtimeVersion\": \"V8\",\n  \"webapp\": {\n    \"executeAs\": \"USER_DEPLOYING\",\n    \"access\": \"ANYONE_ANONYMOUS\"\n  }\n}"},{"id":"bbd850fb-60c1-4c4b-91aa-b4f3d8374b4b","name":"Code","type":"server_js","source":"function doGet() {\n  return HtmlService.createHtmlOutputFromFile(\u0027feedback\u0027);\n}\n"},{"id":"a3ec0ad5-a05d-4dac-aae3-cba26b4e1f9f","name":"feedback","type":"html","source":"\u003c!DOCTYPE html\u003e\n\u003chtml\u003e\n\u003chead\u003e\n    \u003cmeta charset\u003d\"UTF-8\"\u003e\n    \u003cmeta name\u003d\"viewport\" content\u003d\"width\u003ddevice-width, initial-scale\u003d1.0\"\u003e\n    \u003ctitle\u003eFeedback Icons\u003c/title\u003e\n    \u003cstyle\u003e\n        body {\n            font-family: Arial, sans-serif;\n            background-color: #ffffff;\n            text-align: center;\n        }\n        .icon-container {\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            margin: 5px;\n        }\n        .icon {\n            width: 60px;\n            height: 80px;\n            cursor: pointer;\n            margin: 5px;\n            transition: transform 0.2s;\n        }\n        .icon:hover {\n            transform: scale(1.1);\n        }\n        .count {\n            font-size: 14px;\n            margin-top: 1px;\n        }\n        .message {\n            margin-top: 1px;\n            font-size: 15px;\n            color: #cc8b60;\n        }\n        .glitter {\n            position: absolute;\n            width: 10px;\n            height: 10px;\n            background: gold;\n            border-radius: 50%;\n            animation: glitter-animation 1s forwards;\n            pointer-events: none; /* Prevent glitter from interfering with clicks */\n        }\n        @keyframes glitter-animation {\n            0% { transform: translateY(0); opacity: 1; }\n            100% { transform: translateY(-100px); opacity: 0; }\n        }\n        .comment-box {\n            margin-top: 20px;\n        }\n        .comment-input {\n            width: 250px;\n            height: 40px;\n            margin-bottom: 10px;\n            padding: 10px;\n            border: 1px solid #ccc;\n            border-radius: 5px;\n            resize: none;\n        }\n        .submit-button {\n            padding: 10px 20px;\n            background-color: #4CAF50;\n            color: white;\n            border: none;\n            border-radius: 5px;\n            cursor: pointer;\n        }\n        .submit-button:hover {\n            background-color: #45a049;\n        }\n        .comments-list {\n            margin-top: 20px;\n            text-align: left;\n            max-width: 300px;\n            margin-left: auto;\n            margin-right: auto;\n        }\n        .comment-item { /* Style for individual comments */\n            margin-bottom: 5px;\n            padding: 8px;\n            border: 1px solid #eee;\n            border-radius: 5px;\n            background-color: #f9f9f9; /* Light background for comments */\n            word-wrap: break-word; /* Prevents long words from overflowing */\n        }\n    \u003c/style\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n\n    \u003cdiv class\u003d\"icon-container\"\u003e\n        \u003cdiv\u003e\n            \u003cimg class\u003d\"icon\" id\u003d\"happy\" src\u003d\"https://imgur.com/kWG8nZD.png\" onclick\u003d\"handleClick(\u0027happy\u0027, event)\" alt\u003d\"Happy Face\"\u003e\n            \u003cdiv class\u003d\"count\" id\u003d\"happyCount\"\u003e0\u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv\u003e\n            \u003cimg class\u003d\"icon\" id\u003d\"kiss\" src\u003d\"https://imgur.com/Rql6uBQ.png\" onclick\u003d\"handleClick(\u0027kiss\u0027, event)\" alt\u003d\"Kiss Face\"\u003e\n            \u003cdiv class\u003d\"count\" id\u003d\"kissCount\"\u003e0\u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv\u003e\n            \u003cimg class\u003d\"icon\" id\u003d\"sad\" src\u003d\"https://imgur.com/zdpxJYW.png\" onclick\u003d\"handleClick(\u0027sad\u0027, event)\" alt\u003d\"Sad Face\"\u003e\n            \u003cdiv class\u003d\"count\" id\u003d\"sadCount\"\u003e0\u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv\u003e\n            \u003cimg class\u003d\"icon\" id\u003d\"heart\" src\u003d\"https://imgur.com/vI8PSiO.png\" onclick\u003d\"handleClick(\u0027heart\u0027, event)\" alt\u003d\"Heart\"\u003e\n            \u003cdiv class\u003d\"count\" id\u003d\"heartCount\"\u003e0\u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n\n    \u003cdiv class\u003d\"message\" id\u003d\"message\"\u003e\u003c/div\u003e\n\n    \u003cdiv class\u003d\"comment-box\"\u003e\n        \u003ctextarea id\u003d\"commentInput\" class\u003d\"comment-input\" placeholder\u003d\"Leave your comment here...\"\u003e\u003c/textarea\u003e\u003cbr\u003e\n        \u003cbutton class\u003d\"submit-button\" onclick\u003d\"submitComment()\"\u003eSubmit Comment\u003c/button\u003e\n    \u003c/div\u003e\n\n    \u003cdiv class\u003d\"comments-list\" id\u003d\"commentsList\"\u003e\u003c/div\u003e\n\n    \u003cscript\u003e\n        let counts \u003d { happy: 0, kiss: 0, sad: 0, heart: 0 };\n        let comments \u003d [];\n\n        function loadData() {\n            window.parent.postMessage(\u0027REQUEST_DATA\u0027, \u0027*\u0027);\n        }\n\n        function handleClick(icon, event) {\n            counts[icon]++;\n            updateDisplay();\n\n            const message \u003d icon \u003d\u003d\u003d \u0027sad\u0027 ? \u0027Will try better next time.\u0027 : \u0027Thank you for the feedback!\u0027;\n            document.getElementById(\u0027message\u0027).innerText \u003d message;\n\n            window.parent.postMessage({ type: \u0027SAVE_COUNTS\u0027, data: counts }, \u0027*\u0027);\n            createGlitter(event.clientX, event.clientY);\n        }\n\n        function createGlitter(x, y) {\n            const glitter \u003d document.createElement(\u0027div\u0027);\n            glitter.className \u003d \u0027glitter\u0027;\n            glitter.style.left \u003d `${x - 5}px`;\n            glitter.style.top \u003d `${y - 5}px`;\n            document.body.appendChild(glitter);\n            setTimeout(() \u003d\u003e {\n                glitter.remove();\n            }, 1000);\n        }\n\n        function submitComment() {\n            const commentInput \u003d document.getElementById(\u0027commentInput\u0027);\n            const commentText \u003d commentInput.value.trim();\n\n            if (commentText \u0026\u0026 !commentText.includes(\u0027http\u0027)) {\n                comments.push(commentText);\n                updateDisplay();\n\n                window.parent.postMessage({ type: \u0027SAVE_COMMENTS\u0027, data: comments }, \u0027*\u0027);\n\n                commentInput.value \u003d \u0027\u0027;\n            } else {\n                alert(\u0027Please enter a valid comment without links.\u0027);\n            }\n        }\n\n        function updateDisplay() {\n            for (const key in counts) {\n                const countElement \u003d document.getElementById(key + \u0027Count\u0027);\n                if (countElement) {\n                    countElement.innerText \u003d counts[key];\n                }\n            }\n\n            const commentsList \u003d document.getElementById(\u0027commentsList\u0027);\n            if (commentsList) {\n                commentsList.innerHTML \u003d \u0027\u0027;\n                comments.forEach(comment \u003d\u003e {\n                    const commentElement \u003d document.createElement(\u0027div\u0027);\n                    commentElement.className \u003d \u0027comment-item\u0027;\n                    commentElement.textContent \u003d comment;\n                    commentsList.appendChild(commentElement);\n                });\n            }\n        }\n\n        window.addEventListener(\u0027DOMContentLoaded\u0027, loadData);\n\n        window.addEventListener(\u0027message\u0027, (event) \u003d\u003e {\n            if (event.data.type \u003d\u003d\u003d \u0027DATA_RESPONSE\u0027) {\n                counts \u003d event.data.counts;\n                comments \u003d event.data.comments;\n                updateDisplay();\n            }\n        });\n    \u003c/script\u003e\n\n\u003c/body\u003e\n\u003c/html\u003e"}]}